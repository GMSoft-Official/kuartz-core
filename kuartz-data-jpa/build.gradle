buildscript {
    ext {
        springBootVersion = '1.5.10.RELEASE'
        checkstyleversion = '8.4'
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//        classpath "com.kuartz.core.plugin.gradle:kuartz-gradle-plugin:${kuartzGradlePluginVersion}"
    }
}

//apply plugin: "com.kuartz.core.plugin.gradle"

//querydsl {
//    aptOptions = ['querydsl.entityAccessors=true','querydsl.useFields=false',
//                  "-proc:only",
////            "-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor",
//                  "-Aquerydsl.prefix=",
//                  "-Aquerydsl.suffix=Query",
//                  "-Aquerydsl.packageSuffix=.query",
////            "-s", generatedSourcesDir
//            ]
//}

group 'com.kuartz.core'
version "${kuartzDataJpaVersion}"
sourceCompatibility = 1.8

sourceSets {
    main.java.srcDir "src/main/java"
    main.resources.srcDir "src/main/resources"
    test.java.srcDir "src/test/java"
    test.resources.srcDir "src/test/resources"
}

jar {
    enabled = true
}

dependencies {
    api project(":kuartz-core-common")
    compile(
            [group: 'com.querydsl', name: 'querydsl-core', version: queryDslVersion],
            [group: 'com.querydsl', name: 'querydsl-jpa', version: queryDslVersion],
            [group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'],
            [group: 'org.springframework.security', name: 'spring-security-core'],
            [group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: "${jacksonVersion}"],

            [group: 'org.postgresql', name: 'postgresql', version: '42.2.6'],
    )
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jpa"
    annotationProcessor "javax.annotation:javax.annotation-api"
    annotationProcessor("org.springframework.boot:spring-boot-starter-data-jpa")

    compileOnly 'org.projectlombok:lombok:1.18.2'
    annotationProcessor 'org.projectlombok:lombok:1.18.2'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

compileJava.dependsOn("processResources");

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'kuartz-data-jpa'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'Kuart JPA Library'
                description = 'Kuartz custom JPA repository library'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'celebikutay'
                        name = 'Kutay Ã‡elebi'
                        email = 'mail@kutaycelebi.com'
                    }
                }
            }
        }
    }
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    def generatedSourcesDir = "src/main/java"
    def sourceSets = project.sourceSets

//    setSource(project.sourceSets.main.java)
    classpath = sourceSets.main.compileClasspath
    setDestinationDir(new File(generatedSourcesDir))
    source = sourceSets.main.java

    options.annotationProcessorPath = sourceSets.main.annotationProcessorPath


    options.compilerArgs = [
            "-proc:only",
            "-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor",
            "-Aquerydsl.prefix=",
            "-Aquerydsl.suffix=Query",
            "-Aquerydsl.packageSuffix=.query",
            "-s", generatedSourcesDir
    ]
}