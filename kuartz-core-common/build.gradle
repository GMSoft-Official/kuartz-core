group 'com.kuartz.core.common'
version "${kuartzCommonVersion}"

sourceCompatibility = 1.8

bootJar {
    enabled = false
}

jar {
    enabled = true
}

dependencies {
    compile(
            [group: 'com.kuartz.core.env', name: 'kuartz-core-environment', version: "${kuartzEnvVersion}"],

            [group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "${jacksonVersion}"],
            [group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${jacksonVersion}"],
            [group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'],
            [group: 'org.springframework.data', name: 'spring-data-commons'],
    )
}


task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

publishing {
    repositories {
        maven {
            url 'http://10.10.14.35:8081/repository/maven-releases/'
            credentials {
                username = 'admin'
                password = '2802nK.'
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'kuartz-core-common'
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = 'Kuart Common Library'
                description = 'Kuartz custom Common library'
//                 url = 'http://10.10.14.35:8081/repository/maven-public/'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'celebikutay'
                        name = 'Kutay Ã‡elebi'
                        email = 'mail@kutaycelebi.com'
                    }
                }
                // scm {
                //     connection = 'scm:git:git://example.com/my-library.git'
                //     developerConnection = 'scm:git:ssh://example.com/my-library.git'
                //     url = 'http://example.com/my-library/'
                // }
            }
        }
    }
}
